{
	"info": {
		"_postman_id": "e7d86708-79f9-4a69-903d-f7369bde2faf",
		"name": "Products",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27820180"
	},
	"item": [
		{
			"name": "Get all products",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"/*let responseData = pm.response.json();\r",
							"\r",
							"let id = pm.environment.get(\"id\");\r",
							"\r",
							"let newId = pm.environment.get(\"newId\");\r",
							"\r",
							"pm.environment.set(\"id\", newId);\r",
							"*/"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"if (!pm.environment.get(\"id\")) {\r",
							"    pm.environment.set(\"id\", \"1\"); \r",
							"    console.log(\"Initial productId set to 1\");\r",
							"}\r",
							"let products = pm.response.json().products;\r",
							"let randomIndex = Math.floor(Math.random() * products.length);\r",
							"\r",
							"let title = products[randomIndex].title;\r",
							"let price = products[randomIndex].price;\r",
							"\r",
							"let randomNumber = Math.floor(Math.random() * 30) + 1;\r",
							"\r",
							"let updatedTitle = `${title} (${randomNumber})`;\r",
							"let updatedPrice = price + randomNumber;\r",
							"\r",
							"pm.environment.set(\"newTitle\", updatedTitle);\r",
							"pm.environment.set(\"newPrice\", updatedPrice);\r",
							"pm.environment.set(\"productIndex\", randomIndex);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyjson.com/products",
					"protocol": "https",
					"host": [
						"dummyjson",
						"com"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a single product",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyjson.com/products/1",
					"protocol": "https",
					"host": [
						"dummyjson",
						"com"
					],
					"path": [
						"products",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search products",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyjson.com/products/search?q=phone",
					"protocol": "https",
					"host": [
						"dummyjson",
						"com"
					],
					"path": [
						"products",
						"search"
					],
					"query": [
						{
							"key": "q",
							"value": "phone"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Limit and skip products",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyjson.com/products?limit=10&skip=10&select=title,price",
					"protocol": "https",
					"host": [
						"dummyjson",
						"com"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "limit",
							"value": "10"
						},
						{
							"key": "skip",
							"value": "10"
						},
						{
							"key": "select",
							"value": "title,price"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Product updated successfully\", function () {\r",
							"    pm.expect(responseData.id).to.eql(parseInt(pm.environment.get(\"id\")));\r",
							"});\r",
							"\r",
							"// Increment the productId for the next request\r",
							"let currentId = parseInt(pm.environment.get(\"id\"));\r",
							"let nextId = currentId + 1;\r",
							"pm.environment.set(\"id\", nextId.toString());\r",
							"console.log(`ProductId incremented to: ${nextId}`);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"title\" : \"{{newTitle}}\",\r\n        \"price\" : \"{{newPrice}}\"        \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyjson.com/products/{{id}}",
					"protocol": "https",
					"host": [
						"dummyjson",
						"com"
					],
					"path": [
						"products",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}